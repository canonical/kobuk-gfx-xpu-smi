#!/bin/bash
#
# Copyright (C) 2021-2023 Intel Corporation
# SPDX-License-Identifier: MIT
# @file postinst.in
#
LOG_FILE="/dev/null"

function CreateUser()
{
  groupadd "$1"
  useradd "$1" -M -s /bin/sh -g "$1" >> ${LOG_FILE} 2>&1
  if [ $? -ne 0 ]; then
   	echo "CreateUser $1 failed!"
  fi
}

CreateUser xpum

if [ -d /lib/systemd/system ]; then
  export SERVICE_PATH=/lib/systemd/system
else
  export SERVICE_PATH=/etc/systemd/system
fi

cp -f @CPACK_PACKAGING_INSTALL_PREFIX@/lib/xpum/xpum.service.template ${SERVICE_PATH}/xpum.service
cp -f @CPACK_PACKAGING_INSTALL_PREFIX@/lib/xpum/xpum_rest.service.template ${SERVICE_PATH}/xpum_rest.service
chown -R xpum @CPACK_PACKAGING_INSTALL_PREFIX@/lib/xpum
chmod g+x @CPACK_PACKAGING_INSTALL_PREFIX@/lib/xpum/keytool.sh
chmod g+x @CPACK_PACKAGING_INSTALL_PREFIX@/lib/xpum/enable_restful.sh

# sed -e "s:@CPACK_XPUM_LIB_INSTALL_DIR@:${LIB_PATH}:g" ${SERVICE_PATH}/xpum.service > ${SERVICE_PATH}/xpum.service.n
# mv -f ${SERVICE_PATH}/xpum.service.n ${SERVICE_PATH}/xpum.service
# Start xpum service when systemctl is available
if [ -x "$(command -v systemctl)" ]; then
  systemctl daemon-reload >> ${LOG_FILE} 2>&1
  systemctl enable xpum >> ${LOG_FILE} 2>&1 
  systemctl start xpum
fi
