// Copyright (C) 2022-2023 Intel Corporation
// SPDX-License-Identifier: MIT

object Host "some atsp server" {
    import "generic-host"
    address = {{HOST_ADDRESS}}
    vars.xpum_device_list = [ 0 ]
}

object CheckCommand "by_xpum" {
    command = [ PluginDir + "/check_intel_gpu.py" ]

    arguments += {
        "-H" = {
            value = "$xpum_hostname$"
            required = true
        }
        "-p" = {
            value = "$xpum_port$"
            required = true
        }
        "-d" = {
            value = "$xpum_device_id$"
            required = true
        }
        "-U" = {
            value = "$xpum_username$"
            required = true
        }
        "-P" = {
            value = "$xpum_password$"
            required = true
        }
        "-T" = {
            value = "$xpum_check_type$"
            required = true
        }
        "--disableTLS" = {
            set_if = "$xpum_disable_tls$"
        }
    }

    vars.xpum_disable_tls = false
}

template Service "intel-gpu-xpum" {
    vars.xpum_port = 30000
    
    vars.xpum_username = {{USERNAME}}
    vars.xpum_password = {{PASSWORD}}
    vars.xpum_hostname = host.address
}

apply Service "telemetry of gpu" for ( var device_id in host.vars.xpum_device_list ) {
    import "generic-service"
    import "intel-gpu-xpum"

    check_command = "by_xpum"

    vars.xpum_check_type = "telemetry"
    vars.xpum_device_id = device_id
    assign where len(host.vars.xpum_device_list) >= 1
}

apply Service "health of gpu" for ( var device_id in host.vars.xpum_device_list )  {
    import "generic-service"
    import "intel-gpu-xpum"

    check_command = "by_xpum"

    vars.xpum_check_type = "health"
    vars.xpum_device_id = device_id
    assign where len(host.vars.xpum_device_list) >= 1
}