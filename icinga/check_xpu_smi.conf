// Copyright (C) 2023 Intel Corporation
// SPDX-License-Identifier: MIT

object Host "Some server with Intel Flex GPU" {
    import "generic-host"
    address = {{HOSTNAME}}
    vars.xpum_device_list = [ 0,1,2,3 ] // Add gpu ids you want to check
    vars.ssh_username = {{SSH_USERNAME}}
    vars.ssh_identity_file = {{IDENTITY_FILE_PATH}}
}

object Host "Some server with Intel Max GPU" {
    import "generic-host"
    address = {{HOSTNAME}}
    vars.xpum_device_list = [ 0 ]
    vars.ssh_username = {{SSH_USERNAME}}
    vars.ssh_identity_file = {{IDENTITY_FILE_PATH}}
    // vars.ssh_port = 22 // Change the ssh port if needed
}

object CheckCommand "by_xpu_smi" {
    command = [ PluginDir + "/check_xpu_smi.py" ]

    arguments += {
        "-H" = {
            value = "$xpum_hostname$"
            required = true
        }
        "-d" = {
            value = "$xpum_device_id$"
            required = true
        }
        "-T" = {
            value = "$xpum_check_type$"
            required = true
        }
        "-U" = {
            value = "$xpum_username$"
            required = true
        }
        "-i" = {
            value = "$xpum_identity_file$"
            required = true
        }
    }

}

template Service "xpu_smi_template" {
    import "generic-service"
    vars.xpum_hostname = host.address
    vars.xpum_username = host.vars.ssh_username
    vars.xpum_identity_file = host.vars.ssh_identity_file
    vars.xpum_device_id = device_id
    // vars.xpum_port = host.vars.ssh_port // Change the ssh port if needed
    check_command = "by_xpu_smi"
}

apply Service "telemetry of gpu" for ( var device_id in host.vars.xpum_device_list ) {
  import "xpu_smi_template"

  vars.xpum_check_type = "telemetry"
  assign where len(host.vars.xpum_device_list) >= 1
}

apply Service "health of gpu" for ( var device_id in host.vars.xpum_device_list )  {
    import "xpu_smi_template"

    vars.xpum_check_type = "health"
    assign where len(host.vars.xpum_device_list) >= 1
}
